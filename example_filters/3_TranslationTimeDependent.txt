// copy & paste into playground for testing

const WIDTH = getVideoWidth();
const HEIGHT = getVideoHeight();

function translation_time_dependent(src, dest){
    for (var x=0; x<WIDTH; x = x+1){
        for (var y=0; y<HEIGHT; y = y+1){

            const x_shift = math_floor(currentFrameRuntime() / 50) % WIDTH;
            const y_shift = math_floor(currentFrameRuntime() / 50) % HEIGHT;

            var u = x < x_shift 
                        ? WIDTH - x_shift + x 
                        : x - x_shift;
            var v = y < y_shift 
                        ? HEIGHT - y_shift + y 
                        : y - y_shift;
            copy_pixel(
                src[u][v], 
                dest[x][y]
                );
        }
    }
}

apply_filter(translation_time_dependent);

////////////////////////////////////////////////////////////////////////////
// OR
////////////////////////////////////////////////////////////////////////////
const WIDTH = getVideoWidth();
const HEIGHT = getVideoHeight();

function translation_reverse_mapping(pt){
    const x_shift = math_floor(currentFrameRuntime() / 50) % WIDTH;
    const y_shift = math_floor(currentFrameRuntime() / 50) % HEIGHT;
    var x = pt[0];
    var y = pt[1];

    var u = x < x_shift 
                ? WIDTH - x_shift + x 
                : x - x_shift;
    var v = y < y_shift 
                ? HEIGHT - y_shift + y 
                : y - y_shift;

    return [u,v];
}
apply_filter(make_distortion_filter(translation_reverse_mapping));